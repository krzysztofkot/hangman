{"mappings":"AAOA,MAAMA,EAAM,sBCNEC,EAAMC,GAChBC,KAAKC,YAAcC,SAASC,cAAc,cAC1CH,KAAKI,kBAAoBF,SAASC,cAAc,aAChDH,KAAKK,cAAgBH,SAASC,cAAc,4BAC5CH,KAAKM,QAAUJ,SAASC,cAAc,qBACtCH,KAAKO,UAAYL,SAASC,cAAc,yBACxCH,KAAKQ,cAAgBR,KAAKS,YAAYC,KAAKV,MAC3CA,KAAKW,KAAO,IAAIb,EAChBE,KAAKY,GAAK,IAAIb,EACdC,KAAKa,YACLb,KAAKc,aACLd,KAAKe,sBACLf,KAAKgB,gBACLhB,KAAKiB,kBAGPJ,YACEb,KAAKkB,SACLC,OAAOC,iBAAiB,SAAUpB,KAAKkB,QAGzCA,SACE,MAAMG,EAA0B,IAArBF,OAAOG,YAClBpB,SAASqB,gBAAgBC,MAAMC,YAAY,OAAM,GAAKJ,OAGxDK,OAEE1B,KAAKY,GAAGe,yBACR3B,KAAKY,GAAGgB,iBACR5B,KAAKY,GAAGiB,cACR7B,KAAK8B,MAAQ,GACb9B,KAAKY,GAAGmB,aAAe/B,KAAK8B,MAC5B9B,KAAKY,GAAGoB,iBACRhC,KAAKiC,aAAe,EAItBC,UAAUC,GACR,GAAIA,EAAEC,OAAOC,QAAQ,cAAe,CAClCrC,KAAK0B,OACL,MAAMY,EAAMH,EAAEC,OAAOC,QAAQ,cAC7BrC,KAAKuC,MAAQD,EAAIE,QAAQD,MACzBvC,KAAKY,GAAG6B,oBACRzC,KAAK0C,YAITC,iBACE3C,KAAKY,GAAG6B,oBACRzC,KAAKY,GAAGgC,sBACR5C,KAAKY,GAAGiC,YAGV/B,aACEd,KAAKC,YAAYmB,iBAAiB,QAASpB,KAAKkC,UAAUxB,KAAKV,OAGjEgB,gBACEhB,KAAKM,QAAQc,iBAAiB,QAASpB,KAAK8C,cAAcpC,KAAKV,OAGjEiB,kBACEjB,KAAKO,UAAUa,iBAAiB,QAASpB,KAAK8C,cAAcpC,KAAKV,OAGnE8C,gBACE9C,KAAKY,GAAGmC,kBAGVC,iBACEhD,KAAKI,kBAAkBgB,iBAAiB,QAASpB,KAAKQ,eAGxDyC,kBACEjD,KAAKI,kBAAkB8C,oBAAoB,QAASlD,KAAKQ,eAG3DO,sBACEf,KAAKK,cAAce,iBACjB,QACApB,KAAK2C,eAAejC,KAAKV,OAI7BmD,gBAAgBC,GACd,MAAMC,EAAM,GACZD,EAAME,SAAO,CAAEC,EAAMC,KACnB,MAAMC,EAAiBvD,SAASC,cAAa,eAAgBoD,OAC7DvD,KAAKY,GAAG8C,iBAAiBD,GACzBA,EAAejB,QAAQmB,MAAO,EAE9B,MAAOhD,KAACA,GAASX,KAAKW,KAAKiD,QACrBC,EAAe,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAInD,EAAKoD,QAAU,CACjC,MAAMC,EAAYrD,EAAKsD,QAAQV,EAAMO,GACrC,IAAkB,IAAdE,EACF,MAEFH,EAAaK,KAAKF,GAClBF,EAAIE,EAAY,EAElBX,EAAIG,GAASK,KAEfT,EAAME,SAAO,CAAEC,EAAMC,KACnBH,EAAIG,GAAOO,OAAS/D,KAAKmE,UAAUZ,EAAMF,EAAIG,IAAUxD,KAAKoE,eAIhE3D,YAAY0B,GACV,MAAMsB,EAAiBtB,EAAEC,OACzB,GAAoC,UAAhCqB,EAAejB,QAAQmB,KAAkB,CAE3C,MAAMU,EAAcZ,EAAejB,QAAQe,KAE3CvD,KAAKmD,gBAAgB,CAACkB,KAI1BF,UAAUZ,EAAMe,GACdtE,KAAKY,GAAG2D,aAAahB,EAAMe,GAC3BA,EAAQhB,SAASkB,IACfxE,KAAKyE,QACHzE,KAAKyE,QAAQC,OAAO,EAAGF,GAAMjB,EAAOvD,KAAKyE,QAAQC,OAAOF,EAAK,MAE7DxE,KAAKyE,UAAYzE,KAAKW,KAAKiD,QAAQjD,MACrCX,KAAK2E,UAITP,YACEpE,KAAKiC,eACLjC,KAAK8B,OAAS,EACd9B,KAAKY,GAAGmB,aAAe/B,KAAK8B,MAC5B9B,KAAKY,GAAGgE,cAAc5E,KAAKiC,cACtBjC,KAAK8B,OACR9B,KAAK6E,WAITF,UACE3E,KAAKiD,kBACL6B,YAAU,KACR9E,KAAKY,GAAGmE,WAAU,KACjB,MAGLF,WACE7E,KAAKiD,kBAELjD,KAAKY,GAAGoE,sBACRF,YAAU,KACR9E,KAAKY,GAAGmE,WAAU,EAAO/E,KAAKW,KAAKiD,QAAQjD,QAC1C,uBAIH,IACEX,KAAKY,GAAGqE,gBACR,MAAMC,QAAYlF,KAAKW,KAAKwE,UAAUnF,KAAKuC,OACrC6C,EAAepF,KAAKW,KAAK0E,YAAYH,EAAIvE,MAC/C,IAAI2E,EAIFA,EAHGJ,EAAIK,YAGQvF,KAAKW,KAAK6E,mBAAmBN,EAAIK,YAAaL,EAAIvE,MAFlD,mCAIjBX,KAAKW,KAAKiD,QAAU,CAAEjD,KAAMyE,EAAcG,YAAaD,GACvDtF,KAAKY,GAAG6E,iBAAiBzF,KAAKW,KAAKiD,QAAQjD,MAI3CX,KAAKY,GAAG8E,mBAER1F,KAAKgD,iBACLhD,KAAKY,GAAG+E,mBAAmB3F,KAAKW,KAAKiD,QAAQ2B,aAE7CvF,KAAKyE,QAAU,IAAImB,OAAOV,EAAIvE,KAAKoD,QACnC/D,KAAKY,GAAGiF,YACR,MAAOC,GACP9F,KAAKY,GAAGmF,eAAeD,GACvB9F,KAAKY,GAAGiC,YACT,QACC7C,KAAKY,GAAGqE,wCCnLZI,YAAYW,GACV,MACMC,EAAK,IAAIC,OADF,4CACkB,MAC/B,OAAOF,EAAQG,QAAQF,EAAI,IAG7BT,mBAAmBQ,EAASI,GAC1B,MACMH,EAAK,IAAIC,OADCE,EACe,MAC/B,OAAOJ,EAAQG,QAAQF,EAAI,uBAGbI,GACd,IAEE,MAAMC,EAActG,KAAKuG,eAAeF,GACxC,IAAKC,EAAa,MAAM,IAAIE,MAAM,kCAElC,MAAMtB,QAAYuB,MAAK,0EACqDH,+DAG5E,IAAKpB,EAAIwB,GACP,MAAM,IAAIF,MAAK,+BAAgCtB,EAAIyB,WAErD,MAAMC,QAAa1B,EAAI2B,OAEjBC,QAAgBL,MAAK,wCACeG,EAAKjG,gJAE/C,IAAKmG,EAAQJ,GACX,MAAM,IAAIF,MAAK,oCAAqCM,EAAQH,UAC9D,MAAMI,QAAiBD,EAAQD,OAE/B,IAAIG,EAKJ,OAH0CA,EADrCD,EAAS,GAAGE,MACRC,MAAMC,QAAQJ,EAAS,GAAGE,MAAcF,EAAS,GAAGE,KAAK,GADpCF,EAAS,GAAGE,KAInC,CAAEtG,KAAMiG,EAAKjG,KAAKyG,cAAe7B,YAAayB,GACrD,MAAOlB,GACP,MAAMA,GAIVS,eAAeF,GACb,IAAIgB,EACJ,OAAQhB,GACN,IAAK,OACHgB,EACE,8GACF,MACF,IAAK,SACHA,EACE,+GACF,MACF,IAAK,OACHA,EACE,wGACF,cAGAA,GAAS,EAGb,OAAOA,wBCpEPrH,KAAKsH,YAAcpH,SAASC,cAAc,UAC1CH,KAAKuH,MAAQrH,SAASC,cAAc,oBACpCH,KAAKwH,QAAUtH,SAASC,cAAc,YACtCH,KAAKyH,UAAYvH,SAASC,cAAc,gBACxCH,KAAK0H,SAAWxH,SAASC,cAAc,qBACvCH,KAAK2H,cAAgBzH,SAASC,cAAc,qBAC5CH,KAAK4H,aAAe1H,SAASC,cAAc,0BAC3CH,KAAK6H,cAAgB3H,SAASC,cAAc,SAC5CH,KAAK8H,aAAe5H,SAAS6H,iBAAiB,gBAC9C/H,KAAKgI,sBAAwB9H,SAAS6H,iBAAiB,oBACvD/H,KAAKiI,eAAiB/H,SAASC,cAAc,iBAC7CH,KAAKkI,WAAa,sDAClBlI,KAAKI,kBAAoBF,SAASC,cAAc,aAGlD6B,sBACShC,KAAKI,kBAAkB+H,YAC5BnI,KAAKI,kBAAkBgI,YAAYpI,KAAKI,kBAAkB+H,YAI9DlD,gBACEjF,KAAKwH,QAAQa,UAAUC,OAAO,UAGhCzC,YACE7F,KAAKuH,MAAMc,UAAUE,OAAO,UAG9B1F,YACE7C,KAAKuH,MAAMc,UAAUG,IAAI,UAG3B7C,mBAAmBqB,GACjBhH,KAAK0H,SAASe,UAAYzB,EAG5BzC,aAAahB,EAAMe,GACjB,MAAMoE,EAAWxI,SAAS6H,iBAAiB,wBAC3CzD,EAAQhB,SAASqF,IACfD,EAASC,GAAKC,YAAcrF,KAIhCmC,mBAEmB1F,KAAKkI,WAAWW,MAAM,KAC9BvF,SAASC,IAChB,MAAMuF,EAAS5I,SAAS6I,cAAc,UACtCD,EAAOtG,QAAQmB,MAAO,EACtBmF,EAAOtG,QAAQe,KAAOA,EACtBuF,EAAOT,UAAUG,IAAI,kBACrBM,EAAOF,YAAcrF,EACrBvD,KAAKI,kBAAkB4I,YAAYF,MAIvCrG,oBACEzC,KAAKsH,YAAYe,UAAUC,OAAO,UAGpC5E,iBAAiBsC,GACfA,EAAQqC,UAAUG,IAAI,wBAGxB/C,iBAAiB9E,GAEf,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAKoD,OAAQD,IAC/B9D,KAAK6H,cAAcoB,mBAAmB,YAF5B,yDAMdrH,iBACE5B,KAAK6H,cAAce,YAAc,GAGnC/G,cACEqF,MAAMgC,KAAKlJ,KAAK8H,cAAcxE,SAAS6F,GACrCA,EAAKd,UAAUG,IAAI,YAIvB5D,cAAcJ,GACRA,GAAMxE,KAAK8H,aAAa/D,QAC1B/D,KAAK8H,aAAatD,EAAK,GAAG6D,UAAUE,OAAO,UAG3CxG,iBAAaqH,GACfpJ,KAAKiI,eAAeW,YAAcQ,EAEpCrG,kBACE/C,KAAKyH,UAAUY,UAAUC,OAAO,UAGlC1F,sBACE5C,KAAK2H,cAAcU,UAAUC,OAAO,UAGtCvC,eAAeD,GACb9F,KAAK4C,sBACL5C,KAAK4H,aAAagB,YAAc9C,EAAIuD,QAGtCtE,UAAUuE,EAAM3I,GAEd,IAAIsG,EADJjH,KAAK4C,sBAGHqE,EADEqC,EACK,6DAEH,iEAAoE3I,8CAG1EX,KAAK4H,aAAaa,UAAYxB,EAGhCjC,sBACEhF,KAAKgI,sBAAsB1E,SAAS6F,IAClC,MAAMI,EAAiBJ,EAAK3G,QAAQgH,UACpCL,EAAKd,UAAUG,IAAIe,MAIvB5H,yBACE3B,KAAKgI,sBAAsB1E,SAAS6F,IAClC,MAAMI,EAAiBJ,EAAK3G,QAAQgH,UACpCL,EAAKd,UAAUE,OAAOgB,SHtHxBpI,OAAOsI,UACTtI,OAAOuI,IAAM7J","sources":["src/index.js","src/js/app.js","src/js/word.js","src/js/ui.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport \"./scss/main.scss\";\r\nimport App from \"./js/app\";\r\nimport Word from \"./js/word\";\r\nimport UI from \"./js/ui\";\r\n\r\nconst app = new App(Word, UI);\r\n\r\nif (window.Cypress) {\r\n  window.app = app;\r\n}\r\n","export default class App {\r\n  constructor(Word, UI) {\r\n    this.navElements = document.querySelector(\".nav__list\");\r\n    this.keyboardContainer = document.querySelector(\".alphabet\");\r\n    this.startAgainBtn = document.querySelector(\"[data-btn='start again']\");\r\n    this.hintBtn = document.querySelector(\"[data-btn='hint']\");\r\n    this.hintPopup = document.querySelector(\"[data-action='close']\");\r\n    this.binedKeyboard = this.charClicked.bind(this);\r\n    this.word = new Word();\r\n    this.ui = new UI();\r\n    this.resizeApp();\r\n    this.enableMenu();\r\n    this.enableStartAgainBtn();\r\n    this.enableHintBtn();\r\n    this.enableHintPopup();\r\n  }\r\n\r\n  resizeApp() {\r\n    this.resize();\r\n    window.addEventListener(\"resize\", this.resize);\r\n  }\r\n\r\n  resize() {\r\n    const vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n  }\r\n\r\n  init() {\r\n    //remove old words\r\n    this.ui.removeHangmanAnimation();\r\n    this.ui.removePassword();\r\n    this.ui.hideHangman();\r\n    this.lives = 11;\r\n    this.ui.displayLives = this.lives;\r\n    this.ui.removeKeyboard();\r\n    this.wrongGuesses = 0;\r\n    //hide hints popup\r\n  }\r\n\r\n  startGame(e) {\r\n    if (e.target.closest(\".nav__item\")) {\r\n      this.init();\r\n      const btn = e.target.closest(\".nav__item\");\r\n      this.level = btn.dataset.level;\r\n      this.ui.toggleStartWindow();\r\n      this.generate();\r\n    }\r\n  }\r\n\r\n  startAgainGame() {\r\n    this.ui.toggleStartWindow();\r\n    this.ui.toggleGameOverPopup();\r\n    this.ui.hideStats();\r\n  }\r\n\r\n  enableMenu() {\r\n    this.navElements.addEventListener(\"click\", this.startGame.bind(this));\r\n  }\r\n\r\n  enableHintBtn() {\r\n    this.hintBtn.addEventListener(\"click\", this.hintBtnAction.bind(this));\r\n  }\r\n\r\n  enableHintPopup() {\r\n    this.hintPopup.addEventListener(\"click\", this.hintBtnAction.bind(this));\r\n  }\r\n\r\n  hintBtnAction() {\r\n    this.ui.toggleHintPopup();\r\n  }\r\n\r\n  enableKeyboard() {\r\n    this.keyboardContainer.addEventListener(\"click\", this.binedKeyboard);\r\n  }\r\n\r\n  disableKeyboard() {\r\n    this.keyboardContainer.removeEventListener(\"click\", this.binedKeyboard);\r\n  }\r\n\r\n  enableStartAgainBtn() {\r\n    this.startAgainBtn.addEventListener(\r\n      \"click\",\r\n      this.startAgainGame.bind(this)\r\n    );\r\n  }\r\n\r\n  checkCharInWord(chars) {\r\n    const arr = [];\r\n    chars.forEach((char, index) => {\r\n      const currentElement = document.querySelector(`[data-char=\"${char}\"]`);\r\n      this.ui.setBtntoInactive(currentElement);\r\n      currentElement.dataset.used = true;\r\n\r\n      const { word } = this.word.wordObj;\r\n      const ArrOfIndexes = [];\r\n      for (let i = 0; i < word.length; ) {\r\n        const charIndex = word.indexOf(char, i);\r\n        if (charIndex === -1) {\r\n          break;\r\n        }\r\n        ArrOfIndexes.push(charIndex);\r\n        i = charIndex + 1;\r\n      }\r\n      arr[index] = ArrOfIndexes;\r\n    });\r\n    chars.forEach((char, index) => {\r\n      arr[index].length ? this.charMatch(char, arr[index]) : this.wrongChar();\r\n    });\r\n  }\r\n\r\n  charClicked(e) {\r\n    const currentElement = e.target;\r\n    if (currentElement.dataset.used === \"false\") {\r\n      //get character\r\n      const clickedChar = currentElement.dataset.char;\r\n      //compare character\r\n      this.checkCharInWord([clickedChar]);\r\n    }\r\n  }\r\n\r\n  charMatch(char, indexes) {\r\n    this.ui.displayChars(char, indexes);\r\n    indexes.forEach((el) => {\r\n      this.pattern =\r\n        this.pattern.substr(0, el) + char + this.pattern.substr(el + 1);\r\n    });\r\n    if (this.pattern === this.word.wordObj.word) {\r\n      this.gameWon();\r\n    }\r\n  }\r\n\r\n  wrongChar() {\r\n    this.wrongGuesses++;\r\n    this.lives -= 1;\r\n    this.ui.displayLives = this.lives;\r\n    this.ui.showHangmanEl(this.wrongGuesses);\r\n    if (!this.lives) {\r\n      this.gameLost();\r\n    }\r\n  }\r\n\r\n  gameWon() {\r\n    this.disableKeyboard();\r\n    setTimeout(() => {\r\n      this.ui.showPopup(true);\r\n    }, 1500);\r\n  }\r\n\r\n  gameLost() {\r\n    this.disableKeyboard();\r\n    //1. Add animatated hangman\r\n    this.ui.addHangmanAnimation();\r\n    setTimeout(() => {\r\n      this.ui.showPopup(false, this.word.wordObj.word);\r\n    }, 1500);\r\n  }\r\n\r\n  async generate() {\r\n    try {\r\n      this.ui.toggleSpinner();\r\n      const res = await this.word.fetchWord(this.level);\r\n      const replacedWord = this.word.replaceWord(res.word);\r\n      let replacedDesc;\r\n      if (!res.description) {\r\n        replacedDesc = \"Sorry, description not provided!\";\r\n      } else {\r\n        replacedDesc = this.word.replaceDescription(res.description, res.word);\r\n      }\r\n      this.word.wordObj = { word: replacedWord, description: replacedDesc };\r\n      this.ui.generatePassword(this.word.wordObj.word);\r\n\r\n      //generate keyborard\r\n\r\n      this.ui.generateKeyboard();\r\n      //Enable keyboard\r\n      this.enableKeyboard();\r\n      this.ui.addHintDescription(this.word.wordObj.description);\r\n      //add text pattern to compare elements\r\n      this.pattern = \"-\".repeat(res.word.length);\r\n      this.ui.showStats();\r\n    } catch (err) {\r\n      this.ui.showErrorPopup(err);\r\n      this.ui.hideStats();\r\n    } finally {\r\n      this.ui.toggleSpinner();\r\n    }\r\n  }\r\n}\r\n","const API_KEY = \"jemwxxisvxvt7ln9n363blwz6vx6y3jvx9q3uzngzpybctyvo\";\r\n\r\nexport default class Word {\r\n  constructor() {}\r\n\r\n  replaceWord(element) {\r\n    const replace = /[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/;\r\n    const re = new RegExp(replace, \"ig\");\r\n    return element.replace(re, \"\");\r\n  }\r\n\r\n  replaceDescription(element, removable) {\r\n    const replace = removable;\r\n    const re = new RegExp(replace, \"ig\");\r\n    return element.replace(re, \"XXX\");\r\n  }\r\n\r\n  async fetchWord(difficult) {\r\n    try {\r\n      let replacedDesc;\r\n      const queryParams = this.getQueryParams(difficult);\r\n      if (!queryParams) throw new Error(\"Incorrect level set! Try again\");\r\n\r\n      const res = await fetch(\r\n        `https://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=true&${queryParams}&api_key=${API_KEY}`\r\n      );\r\n\r\n      if (!res.ok)\r\n        throw new Error(`Error occured, status code: ${res.status} `);\r\n\r\n      const data = await res.json();\r\n\r\n      const descRes = await fetch(\r\n        `https://api.wordnik.com/v4/word.json/${data.word}/definitions?limit=1&includeRelated=false&useCanonical=false&includeTags=false&api_key=${API_KEY}`\r\n      );\r\n      if (!descRes.ok)\r\n        throw new Error(`Description search failed. CODE: ${descRes.status}`);\r\n      const descData = await descRes.json();\r\n\r\n      let desc;\r\n      if (!descData[0].text) desc = descData[0].text;\r\n      else if (Array.isArray(descData[0].text)) desc = descData[0].text[1];\r\n      else desc = descData[0].text;\r\n\r\n      return { word: data.word.toLowerCase(), description: desc };\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  getQueryParams(difficult) {\r\n    let string;\r\n    switch (difficult) {\r\n      case \"easy\":\r\n        string =\r\n          \"minCorpusCount=100000&maxCorpusCount=-1&minDictionaryCount=6&maxDictionaryCount=-1&minLength=6&maxLength=12\";\r\n        break;\r\n      case \"medium\":\r\n        string =\r\n          \"minCorpusCount=1000&maxCorpusCount=12000&minDictionaryCount=4&maxDictionaryCount=-1&minLength=5&maxLength=10\";\r\n        break;\r\n      case \"hard\":\r\n        string =\r\n          \"minCorpusCount=1&maxCorpusCount=20&minDictionaryCount=1&maxDictionaryCount=2&minLength=5&maxLength=10\";\r\n        break;\r\n\r\n      default:\r\n        string = -1;\r\n        break;\r\n    }\r\n    return string;\r\n  }\r\n}\r\n","export default class UI {\r\n  constructor() {\r\n    this.startWindow = document.querySelector(\".start\");\r\n    this.stats = document.querySelector(\".playground__top\");\r\n    this.spinner = document.querySelector(\".spinner\");\r\n    this.popupHint = document.querySelector(\".popup--hint\");\r\n    this.hintDesc = document.querySelector(\"[data-desc='hint'\");\r\n    this.popupGameOver = document.querySelector(\".popup--game-over\");\r\n    this.gameOverDesc = document.querySelector(\"[data-desc='game-over'\");\r\n    this.wordContainer = document.querySelector(\".word\");\r\n    this.hangmanParts = document.querySelectorAll(\"[data-parts]\");\r\n    this.hangmanAnimationParts = document.querySelectorAll(\"[data-animation]\");\r\n    this.livesContainer = document.querySelector(\".lives__value\");\r\n    this.characters = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,w,v,x,y,z\";\r\n    this.keyboardContainer = document.querySelector(\".alphabet\");\r\n  }\r\n\r\n  removeKeyboard() {\r\n    while (this.keyboardContainer.firstChild) {\r\n      this.keyboardContainer.removeChild(this.keyboardContainer.firstChild);\r\n    }\r\n  }\r\n\r\n  toggleSpinner() {\r\n    this.spinner.classList.toggle(\"hidden\");\r\n  }\r\n\r\n  showStats() {\r\n    this.stats.classList.remove(\"hidden\");\r\n  }\r\n\r\n  hideStats() {\r\n    this.stats.classList.add(\"hidden\");\r\n  }\r\n\r\n  addHintDescription(desc) {\r\n    this.hintDesc.innerHTML = desc;\r\n  }\r\n\r\n  displayChars(char, indexes) {\r\n    const password = document.querySelectorAll(\"[data-password=true]\");\r\n    indexes.forEach((val) => {\r\n      password[val].textContent = char;\r\n    });\r\n  }\r\n\r\n  generateKeyboard() {\r\n    //create array of letters\r\n    const charsArr = this.characters.split(\",\");\r\n    charsArr.forEach((char) => {\r\n      const button = document.createElement(\"button\");\r\n      button.dataset.used = false;\r\n      button.dataset.char = char;\r\n      button.classList.add(\"alphabet__char\");\r\n      button.textContent = char;\r\n      this.keyboardContainer.appendChild(button);\r\n    });\r\n  }\r\n\r\n  toggleStartWindow() {\r\n    this.startWindow.classList.toggle(\"hidden\");\r\n  }\r\n\r\n  setBtntoInactive(element) {\r\n    element.classList.add(\"alphabet__char--used\");\r\n  }\r\n\r\n  generatePassword(word) {\r\n    let template = `<span class=\"letter\" data-password=true>&nbsp;</span>`;\r\n    for (let i = 0; i < word.length; i++) {\r\n      this.wordContainer.insertAdjacentHTML(\"beforeend\", template);\r\n    }\r\n  }\r\n\r\n  removePassword() {\r\n    this.wordContainer.textContent = \"\";\r\n  }\r\n\r\n  hideHangman() {\r\n    Array.from(this.hangmanParts).forEach((part) =>\r\n      part.classList.add(\"hidden\")\r\n    );\r\n  }\r\n\r\n  showHangmanEl(el) {\r\n    if (el <= this.hangmanParts.length)\r\n      this.hangmanParts[el - 1].classList.remove(\"hidden\");\r\n    else return;\r\n  }\r\n  set displayLives(value) {\r\n    this.livesContainer.textContent = value;\r\n  }\r\n  toggleHintPopup() {\r\n    this.popupHint.classList.toggle(\"hidden\");\r\n  }\r\n\r\n  toggleGameOverPopup() {\r\n    this.popupGameOver.classList.toggle(\"hidden\");\r\n  }\r\n\r\n  showErrorPopup(err) {\r\n    this.toggleGameOverPopup();\r\n    this.gameOverDesc.textContent = err.message;\r\n  }\r\n\r\n  showPopup(flag, word) {\r\n    this.toggleGameOverPopup();\r\n    let text;\r\n    if (flag) {\r\n      text = \"Congratulations You won! Click button below to start over!\";\r\n    } else {\r\n      text = `Sorry, You lost.... correct answer was <span class='password'>${word}</span>. Click button below to start over!`;\r\n    }\r\n\r\n    this.gameOverDesc.innerHTML = text;\r\n  }\r\n\r\n  addHangmanAnimation() {\r\n    this.hangmanAnimationParts.forEach((part) => {\r\n      const animationClass = part.dataset.animation;\r\n      part.classList.add(animationClass);\r\n    });\r\n  }\r\n\r\n  removeHangmanAnimation() {\r\n    this.hangmanAnimationParts.forEach((part) => {\r\n      const animationClass = part.dataset.animation;\r\n      part.classList.remove(animationClass);\r\n    });\r\n  }\r\n}\r\n"],"names":["$7b95a93d85ab9a01$var$app","Word","UI","this","navElements","document","querySelector","keyboardContainer","startAgainBtn","hintBtn","hintPopup","binedKeyboard","charClicked","bind","word","ui","resizeApp","enableMenu","enableStartAgainBtn","enableHintBtn","enableHintPopup","resize","window","addEventListener","vh","innerHeight","documentElement","style","setProperty","init","removeHangmanAnimation","removePassword","hideHangman","lives","displayLives","removeKeyboard","wrongGuesses","startGame","e","target","closest","btn","level","dataset","toggleStartWindow","generate","startAgainGame","toggleGameOverPopup","hideStats","hintBtnAction","toggleHintPopup","enableKeyboard","disableKeyboard","removeEventListener","checkCharInWord","chars","arr","forEach","char","index","currentElement","setBtntoInactive","used","wordObj","ArrOfIndexes","i","length","charIndex","indexOf","push","charMatch","wrongChar","clickedChar","indexes","displayChars","el","pattern","substr","gameWon","showHangmanEl","gameLost","setTimeout","showPopup","addHangmanAnimation","toggleSpinner","res","fetchWord","replacedWord","replaceWord","replacedDesc","description","replaceDescription","generatePassword","generateKeyboard","addHintDescription","repeat","showStats","err","showErrorPopup","element","re","RegExp","replace","removable","difficult","queryParams","getQueryParams","Error","fetch","ok","status","data","json","descRes","descData","desc","text","Array","isArray","toLowerCase","string","startWindow","stats","spinner","popupHint","hintDesc","popupGameOver","gameOverDesc","wordContainer","hangmanParts","querySelectorAll","hangmanAnimationParts","livesContainer","characters","firstChild","removeChild","classList","toggle","remove","add","innerHTML","password","val","textContent","split","button","createElement","appendChild","insertAdjacentHTML","from","part","value","message","flag","animationClass","animation","Cypress","app"],"version":3,"file":"index.964fc757.js.map"}